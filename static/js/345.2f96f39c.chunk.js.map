{"version":3,"file":"static/js/345.2f96f39c.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","redux/contacts/selectors.js","../node_modules/@chakra-ui/icons/dist/chunk-NIMLFBFN.mjs","../node_modules/@chakra-ui/icons/dist/chunk-UC35PMV4.mjs","components/FilterName/FilterContact.jsx","components/AddContactForm/AddContact.jsx","../node_modules/@chakra-ui/table/dist/chunk-B3MS3L3D.mjs","../node_modules/@chakra-ui/table/dist/chunk-BLRPLYZO.mjs","components/ContactName/ContactName.jsx","../node_modules/@chakra-ui/table/dist/chunk-D3HTYHQX.mjs","../node_modules/@chakra-ui/table/dist/chunk-L7UVV2ML.mjs","components/NameList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export const selectFilter = state => state.filter.filter;\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\n","// src/Phone.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar PhoneIcon = createIcon({\n  d: \"M2.20731,0.0127209 C2.1105,-0.0066419 1.99432,-0.00664663 1.91687,0.032079 C0.871279,0.438698 0.212942,1.92964 0.0580392,2.95587 C-0.426031,6.28627 2.20731,9.17133 4.62766,11.0689 C6.77694,12.7534 10.9012,15.5223 13.3409,12.8503 C13.6507,12.5211 14.0186,12.037 13.9993,11.553 C13.9412,10.7397 13.186,10.1588 12.6051,9.71349 C12.1598,9.38432 11.2304,8.47427 10.6495,8.49363 C10.1267,8.51299 9.79754,9.05515 9.46837,9.38432 L8.88748,9.96521 C8.79067,10.062 7.55145,9.24878 7.41591,9.15197 C6.91248,8.8228 6.4284,8.45491 6.00242,8.04829 C5.57644,7.64167 5.18919,7.19632 4.86002,6.73161 C4.7632,6.59607 3.96933,5.41495 4.04678,5.31813 C4.04678,5.31813 4.72448,4.58234 4.91811,4.2919 C5.32473,3.67229 5.63453,3.18822 5.16982,2.45243 C4.99556,2.18135 4.78257,1.96836 4.55021,1.73601 C4.14359,1.34875 3.73698,0.942131 3.27227,0.612963 C3.02055,0.419335 2.59457,0.0708094 2.20731,0.0127209 Z\",\n  displayName: \"PhoneIcon\",\n  viewBox: \"0 0 14 14\"\n});\n\nexport {\n  PhoneIcon\n};\n","// src/Search2.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar Search2Icon = createIcon({\n  d: \"M23.414,20.591l-4.645-4.645a10.256,10.256,0,1,0-2.828,2.829l4.645,4.644a2.025,2.025,0,0,0,2.828,0A2,2,0,0,0,23.414,20.591ZM10.25,3.005A7.25,7.25,0,1,1,3,10.255,7.258,7.258,0,0,1,10.25,3.005Z\",\n  displayName: \"Search2Icon\"\n});\n\nexport {\n  Search2Icon\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilterContact } from '../../redux/contacts/filter';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { Input, InputGroup, InputLeftElement } from '@chakra-ui/react';\nimport { Search2Icon } from '@chakra-ui/icons';\n\nconst FilterContact = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    const changeFilter = e => {\n        dispatch(changeFilterContact(e.target.value));\n    };\n    return (\n        <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n                <Search2Icon />\n            </InputLeftElement>\n            <Input\n                type=\"text\"\n                value={filter}\n                onChange={changeFilter}\n                size=\"md\"\n                placeholder=\"Enter a name for the filter\"\n                background=\"white\"\n            />\n        </InputGroup>\n    );\n};\n\nexport default FilterContact;\n","import { nanoid } from 'nanoid';\nimport { useForm } from 'react-hook-form';\nimport { object, string } from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    Icon,\n    Input,\n    InputGroup,\n    InputLeftElement,\n    Text,\n} from '@chakra-ui/react';\nimport { PhoneIcon } from '@chakra-ui/icons';\nimport FilterContact from 'components/FilterName/FilterContact';\n\nconst schema = object({\n    name: string()\n        .matches(\n            /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n            'Name may contain only letters, apostrophe, dash and spaces'\n        )\n        .required(),\n    number: string()\n        .matches(\n            /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n            'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +, 5 min numbers'\n        )\n        .required(),\n}).required();\n\nconst AddContact = () => {\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            name: '',\n            number: '',\n        },\n        resolver: yupResolver(schema),\n    });\n\n    useEffect(() => {\n        if (errors?.name) {\n            toast.error(`${errors.name.message}`);\n        }\n        if (errors?.number) {\n            toast.error(`${errors.number.message}`);\n        }\n    }, [errors]);\n\n    const people = useSelector(selectContacts);\n    const dispatch = useDispatch();\n    const addName = (name, number) => {\n        const contact = {\n            id: nanoid(),\n            name,\n            number,\n        };\n        dispatch(addContact(contact));\n    };\n\n    function removeNonDigits(str) {\n        return str.replace(/\\D/g, '');\n    }\n\n    const deliveryData = data => {\n        const { name, number } = data;\n        const nameFound = people.find(\n            person =>\n                person.name.toLowerCase() === name.toLowerCase() ||\n                removeNonDigits(person.number) === removeNonDigits(number)\n        );\n\n        if (nameFound) {\n            alert(`${name} and phone number ${number} is already in contacts`);\n            return;\n        }\n        addName(name, number);\n        reset();\n    };\n\n    return (\n        <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            mb='40px'\n        >\n            <Box\n                width=\"sm\"\n                height=\"auto\"\n                pb=\"30px\"\n                pr=\"50px\"\n                pl=\"50px\"\n                bg=\"white\"\n                paddingTop=\"30px\"\n                borderRadius=\"20px\"\n                textAlign=\"center\"\n            >\n                <form onSubmit={handleSubmit(deliveryData)}>\n                    <Text\n                        fontSize=\"30px\"\n                        textAlign=\"center\"\n                        fontWeight=\"semibold\"\n                        mb=\"10px\"\n                    >\n                        Add contact\n                    </Text>\n                    <InputGroup mb=\"20px\">\n                        <InputLeftElement pointerEvents=\"none\">\n                            <Icon viewBox=\"0 0 32 32\">\n                                <path d=\"M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z\"></path>\n                            </Icon>\n                        </InputLeftElement>\n                        <Input\n                            type=\"text\"\n                            name=\"name\"\n                            {...register('name')}\n                            aria-invalid={errors.name ? 'true' : 'false'}\n                            placeholder=\"Enter name\"\n                        />\n                    </InputGroup>\n                    <InputGroup mb=\"20px\">\n                        <InputLeftElement pointerEvents=\"none\">\n                            <PhoneIcon />\n                        </InputLeftElement>\n                        <Input\n                            type=\"tel\"\n                            name=\"number\"\n                            {...register('number')}\n                            aria-invalid={errors.number ? 'true' : 'false'}\n                            placeholder=\"Enter phone\"\n                        />\n                    </InputGroup>\n\n                    <Button\n                        type=\"submit\"\n                        variant=\"solid\"\n                        display=\"inline-block\"\n                        colorScheme=\"teal\"\n                        mb=\"35px\"\n                    >\n                        Add contact\n                    </Button>\n                    <FilterContact />\n                </form>\n            </Box>\n        </Box>\n    );\n};\n\nexport default AddContact;\n","// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, layout, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(TableStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.table,\n    {\n      ref,\n      __css: { tableLayout: layout, ...styles.table },\n      className: cx(\"chakra-table\", className),\n      ...tableProps\n    }\n  ) });\n});\nTable.displayName = \"Table\";\n\nexport {\n  useTableStyles,\n  Table\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/td.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Td = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.td,\n      {\n        ...rest,\n        ref,\n        __css: styles.td,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Td\n};\n","import { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { Td } from '@chakra-ui/react';\n\nconst ContactName = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    const deleteName = nameId => {\n        dispatch(deleteContact(nameId));\n    };\n    return (\n        <>\n            <Td fontWeight='500' fontSize=\"16px\" textAlign=\"center\">\n                {name}\n            </Td>\n            <Td fontWeight='500' fontSize=\"15px\" textAlign=\"center\">\n                {number}\n            </Td>\n            <Td\n            fontWeight='500'\n                fontSize=\"15px\"\n                color=\"red\"\n                cursor=\"pointer\"\n                textAlign=\"center\"\n                onClick={() => deleteName(id)}\n            >\n                Delete\n            </Td>\n        </>\n    );\n};\n\nexport default ContactName;\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tbody.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tbody = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tbody, { ...props, ref, __css: styles.tbody });\n});\n\nexport {\n  Tbody\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tr.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tr = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tr, { ...props, ref, __css: styles.tr });\n});\n\nexport {\n  Tr\n};\n","import ContactName from '../ContactName/ContactName';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    selectContacts,\n    selectFilter,\n    selectLoading,\n    selectError,\n} from '../../redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { featchContacts } from '../../redux/contacts/operations';\nimport { DotLoader } from 'react-spinners';\nimport { Table, Tbody, Tr } from '@chakra-ui/react';\nimport styled from 'styled-components';\n\nconst Error = styled.h1`\n    font-size: 24px;\n    font-weight: bold;\n    text-align: center;\n    color: #ff4d4f;\n    margin-top: 20px;\n`;\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(featchContacts());\n    }, [dispatch]);\n    const filter = useSelector(selectFilter);\n    const contacts = useSelector(selectContacts);\n    const error = useSelector(selectError);\n    const loading = useSelector(selectLoading);\n\n    const getVisibleName = () => {\n        const normalizedName = filter.toLowerCase();\n        const filterContacts = contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedName)\n        );\n        return [...filterContacts].sort((a, b) =>\n            a.name.toLowerCase().localeCompare(b.name)\n        );\n    };\n    return (\n        <>\n            {loading && (\n                <>\n                    <DotLoader\n                        style={{\n                            position: 'fixed',\n                            top: '50%',\n                            left: '50%',\n                            zIndex: '999',\n                        }}\n                        color=\"#3682d6\"\n                        cssOverride={{}}\n                        loading\n                        size={50}\n                    />\n                </>\n            )}\n            {error ? (\n                <>\n                    <Error>\n                        Sorry, an error occurred while loading this page. Please\n                        try again later\n                    </Error>\n                </>\n            ) : (\n                <>\n                    <Table>\n                        <Tbody>\n                            {getVisibleName().map(({ id, name, number }) => (\n                                <Tr\n                                    background=\"white\"\n                                    justifyContent=\"space-between\"\n                                    key={id}\n                                >\n                                    <ContactName\n                                        id={id}\n                                        name={name}\n                                        number={number}\n                                    />\n                                </Tr>\n                            ))}\n                        </Tbody>\n                    </Table>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport AddContact from '../components/AddContactForm';\nimport styled from 'styled-components';\nimport ContactList from 'components/NameList/ContactList';\nconst PhoneBook = styled.div`\n    padding-top: 20px;\n    padding-bottom: 20px;\n`;\n\nexport default function Contacts() {\n    return (\n        <PhoneBook>\n            <AddContact />\n            <ContactList />\n        </PhoneBook>\n    );\n}\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","selectFilter","state","filter","selectContacts","contacts","items","selectLoading","isLoading","selectError","error","PhoneIcon","createIcon","d","displayName","viewBox","Search2Icon","dispatch","useDispatch","useSelector","pointerEvents","I","type","value","onChange","e","changeFilterContact","target","placeholder","background","schema","object","name","string","matches","required","number","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","reset","errors","formState","useEffect","toast","message","people","removeNonDigits","str","replace","display","justifyContent","alignItems","mb","width","height","pb","pr","pl","bg","paddingTop","borderRadius","textAlign","onSubmit","data","find","person","toLowerCase","alert","contact","addContact","addName","fontSize","fontWeight","variant","colorScheme","createContext","errorMessage","TableStylesProvider","useTableStyles","Table","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","className","layout","tableProps","jsx","children","chakra","__css","tableLayout","table","cx","Td","isNumeric","rest","td","color","cursor","onClick","nameId","deleteContact","Tbody","tbody","Tr","tr","Error","styled","featchContacts","loading","DotLoader","style","position","top","left","zIndex","cssOverride","normalizedName","filterContacts","includes","sort","a","b","localeCompare","getVisibleName","map","PhoneBook","Contacts"],"sourceRoot":""}
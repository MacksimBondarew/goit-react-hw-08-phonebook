{"version":3,"file":"static/js/397.77283cea.chunk.js","mappings":"gTAEA,SAASA,EAAUC,EAAKC,GACtB,GAAW,MAAPD,EAEJ,GAAmB,oBAARA,EAIX,IACEA,EAAIE,QAAUD,CAGf,CAFC,MAAOE,GACP,MAAM,IAAIC,MAAJ,+BAAkCH,EAAlC,qBAAoDD,EAApD,KACP,MAPCA,EAAIC,EAQP,CACD,SAASI,IAAmB,2BAANC,EAAM,yBAANA,EAAM,gBAC1B,OAAO,SAACC,GACND,EAAKE,SAAQ,SAACR,GACZD,EAAUC,EAAKO,EAChB,GACF,CACF,C,0JCTG,GAAoDE,EAAAA,EAAAA,GAAc,CACpEC,KAAM,2BACNC,aAAc,kHAFhB,eAAKC,EAAL,KAAgCC,EAAhC,KAII,GAA+CJ,EAAAA,EAAAA,GAAc,CAC/DK,QAAQ,EACRJ,KAAM,uBAFR,eAAKK,EAAL,KAA0BC,EAA1B,KAsGA,IAAIC,GAAcC,EAAAA,EAAAA,IAChB,SAAsBC,EAAOnB,GAC3B,IAAMoB,GAASC,EAAAA,EAAAA,IAAoB,OAAQF,GAE3C,EAtGJ,SAAgCA,GAC9B,IACMG,EAMFH,EANFI,GACAC,EAKEL,EALFK,WACAC,EAIEN,EAJFM,UACAC,EAGEP,EAHFO,WACAC,EAEER,EAFFQ,WACGC,GANL,OAOIT,EAPJ,GAQMU,GAAOC,EAAAA,EAAAA,SACPP,EAAKD,GAAU,SAAJ,OAAaO,GACxBE,EAAU,GAAH,OAAMR,EAAN,UACPS,EAAa,GAAH,OAAMT,EAAN,aACVU,EAAa,GAAH,OAAMV,EAAN,aAChB,GAA8CW,EAAAA,EAAAA,WAAS,GAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAkBC,EAAlB,KACMC,GAAmBC,EAAAA,EAAAA,cACvB,eAACC,EAAD,uDAAU,CAAC,EAAGC,EAAd,uDAA6B,KAA7B,eAAC,QACCrB,GAAIU,GACDU,GAFL,IAGE3C,IAAKK,EAAUuC,GAAc,SAACrC,GACvBA,GAEL+B,GAAe,EAChB,KAPH,GASA,CAACL,IAEGY,GAAgBH,EAAAA,EAAAA,cACpB,eAACC,EAAD,uDAAU,CAAC,EAAGC,EAAd,uDAA6B,KAA7B,eAAC,UACID,GADL,IAEE3C,IAAK4C,EACL,cAAcE,EAAAA,EAAAA,IAASP,GACvB,iBAAiBO,EAAAA,EAAAA,IAASpB,GAC1B,gBAAgBoB,EAAAA,EAAAA,IAASrB,GACzB,iBAAiBqB,EAAAA,EAAAA,IAASnB,GAC1BJ,QAAkB,IAAdoB,EAAOpB,GAAgBoB,EAAOpB,GAAKQ,EACvCgB,aAA4B,IAAnBJ,EAAOI,QAAqBJ,EAAOI,QAAUxB,GARxD,GAUA,CAACA,EAAIG,EAAYa,EAAWd,EAAWE,EAAYI,IAE/CiB,GAAuBN,EAAAA,EAAAA,cAC3B,eAACC,EAAD,uDAAU,CAAC,EAAGC,EAAd,uDAA6B,KAA7B,eAAC,QACCrB,GAAIS,GACDW,GAFL,IAGE3C,IAAKK,EAAUuC,GAAc,SAACrC,GACvBA,GAEL6B,GAAmB,EACpB,IACD,YAAa,UARf,GAUA,CAACJ,IAEGiB,GAAeP,EAAAA,EAAAA,cACnB,eAACC,EAAD,uDAAU,CAAC,EAAGC,EAAd,uDAA6B,KAA7B,eAAC,kBACID,GACAf,GAFL,IAGE5B,IAAK4C,EACLM,KAAM,SAJR,GAMA,CAACtB,IAEGuB,GAA4BT,EAAAA,EAAAA,cAChC,eAACC,EAAD,uDAAU,CAAC,EAAGC,EAAd,uDAA6B,KAA7B,eAAC,UACID,GADL,IAEE3C,IAAK4C,EACLM,KAAM,eACN,eAAe,EACfE,SAAUT,EAAOS,UAAY,KAL/B,GAOA,IAEF,MAAO,CACL5B,aAAcA,EACdC,YAAaA,EACbE,aAAcA,EACdD,aAAcA,EACda,YAAaA,EACbc,QAAS,kBAAMb,GAAS,EAAf,EACTc,OAAQ,kBAAMd,GAAS,EAAf,EACRL,gBAAAA,EACAC,mBAAAA,EACAC,YAAAA,EACAC,eAAAA,EACAf,GAAAA,EACAQ,QAAAA,EACAC,WAAAA,EACAC,WAAAA,EACAL,UAAAA,EACAa,iBAAAA,EACAO,qBAAAA,EACAC,aAAAA,EACAJ,cAAAA,EACAM,0BAAAA,EAEH,CASOI,EALaC,EAAAA,EAAAA,IAAiBrC,IAEhC8B,EADF,EACEA,aAEGQ,GAHL,EAEE7B,WAFF,aAKM8B,GAAYC,EAAAA,EAAAA,IAAG,sBAAuBxC,EAAMuC,WAClD,OAAuBE,EAAAA,EAAAA,KAAI7C,EAAqB,CAAEd,MAAOwD,EAASL,UAA0BQ,EAAAA,EAAAA,KAAIhD,EAA2B,CAAEX,MAAOmB,EAAQgC,UAA0BQ,EAAAA,EAAAA,KACpKC,EAAAA,EAAAA,KADuK,QAAC,UAGnKZ,EAAa,CAAC,EAAGjD,IAHiJ,IAIrK0D,UAAAA,EACAI,MAAO1C,EAAM,gBAGlB,IAEHH,EAAY8C,YAAc,eACL7C,EAAAA,EAAAA,IACnB,SAAyBC,EAAOnB,GAC9B,IAAMgE,EAAQhD,IACRI,EAASP,IACT6C,GAAYC,EAAAA,EAAAA,IAAG,2BAA4BxC,EAAMuC,WACvD,OAAuBE,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KADwB,QAAC,UAGX,MAATG,OAAgB,EAASA,EAAMvB,iBAAiBtB,EAAOnB,IAHpC,IAItB8D,MAAO1C,EAAO6C,WACdP,UAAAA,IAGL,IAEYK,YAAc,iB,2KCpJ7B,SAASG,EAAe/C,GACtB,MAWF,SAA6BA,GAC3B,IAAIgD,EAAIC,EAAIC,EACNL,EAAQhD,IAEZO,EAWEJ,EAXFI,GACA+C,EAUEnD,EAVFmD,SACAC,EASEpD,EATFoD,SACAC,EAQErD,EARFqD,SACAhD,EAOEL,EAPFK,WACAC,EAMEN,EANFM,UACAE,EAKER,EALFQ,WACAD,EAIEP,EAJFO,WACA2B,EAGElC,EAHFkC,QACAC,EAEEnC,EAFFmC,OACGmB,GAXL,OAYItD,EAZJ,GAaMuD,EAAWvD,EAAM,oBAAsB,CAACA,EAAM,qBAAuB,IAC7D,MAAT6C,OAAgB,EAASA,EAAM7B,mBAA8B,MAAT6B,OAAgB,EAASA,EAAMvC,YACtFiD,EAASC,KAAKX,EAAMhC,aAET,MAATgC,OAAgB,EAASA,EAAM3B,cACjCqC,EAASC,KAAKX,EAAM/B,YAEtB,yBACKwC,GADL,IAEE,mBAAoBC,EAASE,KAAK,WAAQ,EAC1CrD,GAAU,MAANA,EAAaA,EAAc,MAATyC,OAAgB,EAASA,EAAMzC,GACrDG,WAA+D,OAAlDyC,EAAiB,MAAZG,EAAmBA,EAAW5C,GAAsByC,EAAc,MAATH,OAAgB,EAASA,EAAMtC,WAC1GC,WAA+D,OAAlDyC,EAAiB,MAAZG,EAAmBA,EAAW5C,GAAsByC,EAAc,MAATJ,OAAgB,EAASA,EAAMrC,WAC1GH,WAA+D,OAAlD6C,EAAiB,MAAZG,EAAmBA,EAAWhD,GAAsB6C,EAAc,MAATL,OAAgB,EAASA,EAAMxC,WAC1GC,UAAwB,MAAbA,EAAoBA,EAAqB,MAATuC,OAAgB,EAASA,EAAMvC,UAC1E4B,SAASwB,EAAAA,EAAAA,IAAyB,MAATb,OAAgB,EAASA,EAAMX,QAASA,GACjEC,QAAQuB,EAAAA,EAAAA,IAAyB,MAATb,OAAgB,EAASA,EAAMV,OAAQA,IAElE,CA7CoEwB,CAAoB3D,GAA/EO,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,UAAWE,EAA/B,EAA+BA,WAAYH,EAA3C,EAA2CA,WAAeiD,GAA1D,YACA,yBACKA,GADL,IAEEH,SAAU5C,EACV6C,SAAU5C,EACV6C,SAAUhD,EACV,gBAAgBuD,EAAAA,EAAAA,IAAStD,GACzB,iBAAiBsD,EAAAA,EAAAA,IAASvD,GAC1B,iBAAiBuD,EAAAA,EAAAA,IAASpD,IAE7B,C,mBCPGqD,GAAQ9D,EAAAA,EAAAA,IAAW,SAAgBC,EAAOnB,GAC5C,IAAQiF,EAAsB9D,EAAtB8D,SAAaR,GAArB,OAA8BtD,EAA9B,GACMC,GAASC,EAAAA,EAAAA,IAAoB,QAASoD,GAEtCS,EAAQhB,GADGV,EAAAA,EAAAA,IAAiBiB,IAE5BU,GAAaxB,EAAAA,EAAAA,IAAG,eAAgBxC,EAAMuC,WAC5C,OAAuBE,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,OADwB,QAAC,QAGvBuB,KAAMH,GACHC,GAJmB,IAKtBpB,MAAO1C,EAAO4C,MACdhE,IAAAA,EACA0D,UAAWyB,IAGhB,IACDH,EAAMjB,YAAc,QACpBiB,EAAMzD,GAAK,QCbX,IAAM8D,GAASC,EAAAA,EAAAA,IAAO,CAClB5E,MAAM6E,EAAAA,EAAAA,MACLC,QACG,yHACA,0IAEHhB,WACDiB,OAAOF,EAAAA,EAAAA,MACFC,QACG,iDACA,2IAEHhB,aACNA,WAEY,SAASkB,IACpB,OAKIC,EAAAA,EAAAA,IAAQ,CACRC,cAAe,CACXlF,KAAM,GACN+E,MAAO,GACPI,SAAU,IAEdC,UAAUC,EAAAA,EAAAA,GAAYV,KAVtBW,EADJ,EACIA,SACAC,EAFJ,EAEIA,aACAC,EAHJ,EAGIA,MACaC,EAJjB,EAIIC,UAAaD,OASXE,GAAWC,EAAAA,EAAAA,MAcjB,OACI,kBAAMC,SAAUN,GANC,SAAAO,IARI,SAACf,EAAO/E,EAAMmF,GACnCQ,GAASI,EAAAA,EAAAA,cAAa,CAClB/F,KAAAA,EACA+E,MAAAA,EACAI,SAAAA,IAEP,CAIGa,CADkCF,EAA1Bf,MAA0Be,EAAnB9F,KAAmB8F,EAAbX,UAErBK,GACH,IAEG,WACI,kBAAOnD,QAAQ,OAAf,oBACA,kCACI4D,KAAK,OACLjG,KAAK,QACDsF,EAAS,SAHjB,IAII,eAAcG,EAAOzF,KAAO,OAAS,WAExCyF,EAAOzF,OACJ,UAAC,KAAD,YACI,SAAC,KAAD,4BACA,SAAC,IAAD,UAAWyF,EAAOzF,KAAKkG,cAG/B,kBAAO7D,QAAQ,QAAf,qBACA,SAACiC,GAAD,gBACI2B,KAAK,OACLjG,KAAK,SACDsF,EAAS,UAHjB,IAII,eAAcG,EAAOV,MAAQ,OAAS,QACtCL,KAAK,KACLyB,gBAAgB,oBAEnBV,EAAOV,QACJ,UAAC,KAAD,YACI,SAAC,KAAD,4BACA,SAAC,IAAD,UAAWU,EAAOV,MAAMmB,cAGhC,kBAAO7D,QAAQ,WAAf,wBACA,kCACI4D,KAAK,WACLjG,KAAK,YACDsF,EAAS,aAHjB,IAII,eAAcG,EAAON,SAAW,OAAS,WAE5CM,EAAON,WACJ,UAAC,KAAD,YACI,SAAC,KAAD,4BACA,SAAC,IAAD,UAAWM,EAAON,SAASe,cAGnC,SAAC,KAAD,CAAME,GAAG,uBAAT,oBACA,mBAAQH,KAAK,SAAb,wBAGX,C,4QC7FYI,GATcC,EAAAA,GAAAA,KAAH,+IASCA,EAAAA,GAAAA,MAAH,gJAQTC,EAAaD,EAAAA,GAAAA,MAAH,+IA0CVE,GAlCYF,EAAAA,GAAAA,MAAH,gSAiBKA,EAAAA,GAAAA,MAAH,gSAiBQA,EAAAA,GAAAA,OAAH,kTAchB5G,EAAQ4G,EAAAA,GAAAA,IAAH,kOAWLG,EAAYH,EAAAA,GAAAA,KAAH,uEAKTI,EAAWJ,EAAAA,GAAAA,KAAH,8CAGRK,EAAaL,EAAAA,GAAAA,KAAH,+IAUVhC,EAAQgC,EAAAA,GAAAA,MAAH,+R","sources":["../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs","components/RegisterForm/RegisterForm.jsx","style/NameEditor.styled.jsx"],"sourcesContent":["// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { object, string } from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport {\n    Error,\n    ErroText,\n    ErrorIcon,\n} from '../../style/NameEditor.styled';\nimport { useDispatch } from 'react-redux';\n// import { addContact } from '../../redux/contacts/operations';\nimport { registerUser } from '../../redux/auth/operations';\nimport { Link } from 'react-router-dom';\nimport { Input } from '@chakra-ui/react'\n\nconst schema = object({\n    name: string()\n    .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n    email: string()\n        .matches(\n            /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/,\n            \"Email may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        )\n        .required(),\n}).required();\n\nexport default function LoginForm() {\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            name: \"\",\n            email: '',\n            password: '',\n        },\n        resolver: yupResolver(schema),\n    });\n    const dispatch = useDispatch();\n    const deliveryDataUser = (email, name, password) => {\n        dispatch(registerUser({\n            name,\n            email,\n            password,\n        }));\n    };\n\n    const deliveryData = data => {\n        const { email, name, password } = data;\n        deliveryDataUser(email, name, password);\n        reset();\n    };\n    return (\n        <form onSubmit={handleSubmit(deliveryData)}>\n            <label htmlFor=\"name\">Name:</label>\n            <input\n                type=\"text\"\n                name=\"name\"\n                {...register('name')}\n                aria-invalid={errors.name ? 'true' : 'false'}\n            />\n            {errors.name && (\n                <Error>\n                    <ErrorIcon>⚠️</ErrorIcon>\n                    <ErroText>{errors.name.message}</ErroText>\n                </Error>\n            )}\n            <label htmlFor=\"email\">email:</label>\n            <Input\n                type=\"text\"\n                name=\"email\"\n                {...register('email')}\n                aria-invalid={errors.email ? 'true' : 'false'}\n                size='lg'\n                backgroundColor='whiteAlpha.900'\n            />\n            {errors.email && (\n                <Error>\n                    <ErrorIcon>⚠️</ErrorIcon>\n                    <ErroText>{errors.email.message}</ErroText>\n                </Error>\n            )}\n            <label htmlFor=\"password\">password:</label>\n            <input\n                type=\"password\"\n                name=\"password\"\n                {...register('password')}\n                aria-invalid={errors.password ? 'true' : 'false'}\n            />\n            {errors.password && (\n                <Error>\n                    <ErrorIcon>⚠️</ErrorIcon>\n                    <ErroText>{errors.password.message}</ErroText>\n                </Error>\n            )}\n            <Link to='/authorisation/login'>Login</Link>\n            <button type=\"submit\">Register</button>\n        </form>\n    );\n}","import styled from 'styled-components';\n\n\nexport const ContactForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    max-width: 400px;\n    margin: 0 auto;\n    margin-bottom: 20px;\n`;\n\n\nexport const LabelName = styled.label`\n    margin-bottom: 0.5rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: #333;\n    text-align: center;\n`;\n\nexport const LabelPhone = styled.label`\n    margin-bottom: 0.5rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: #333;\n    text-align: center;\n`;\n\nexport const NameInput = styled.input`\n    padding: 0.5rem;\n    margin-bottom: 1rem;\n    font-size: 1.2rem;\n    border: 2px solid #ccc;\n    border-radius: 5px;\n\n    &:focus {\n        outline: none;\n        border-color: #0088cc;\n    }\n\n    &:invalid {\n        border-color: #e74c3c;\n    }\n`;\n\nexport const NumberInput = styled.input`\n    padding: 0.5rem;\n    margin-bottom: 1rem;\n    font-size: 1.2rem;\n    border: 2px solid #ccc;\n    border-radius: 5px;\n\n    &:focus {\n        outline: none;\n        border-color: #0088cc;\n    }\n\n    &:invalid {\n        border-color: #e74c3c;\n    }\n`;\n\nexport const AddContactButton = styled.button`\n    padding: 0.5rem 1rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    text-transform: uppercase;\n    color: #fff;\n    background-color: #0088cc;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    &:hover {\n        background-color: #006699;\n    }\n`;\nexport const Error = styled.div`\n    background-color: #ff6b6b;\n    color: #fff;\n    padding: 10px;\n    border-radius: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    margin-bottom: 10px;\n`;\n\nexport const ErrorIcon = styled.span`\n    font-size: 20px;\n    margin-right: 10px;\n`;\n\nexport const ErroText = styled.span`\n    font-size: 16px;\n`;\nexport const FormFormik = styled.form`\n    display: flex;\n    flex-direction: column;\n    max-width: 400px;\n    margin: 0 auto;\n    margin-bottom: 20px;\n`;\n\n\n\nexport const Input = styled.input`\n    padding: 0.5rem;\n    margin-bottom: 1rem;\n    font-size: 1.2rem;\n    border: 2px solid #ccc;\n    border-radius: 5px;\n\n    &:focus {\n        outline: none;\n        border-color: #0088cc;\n    }\n\n    &:invalid {\n        border-color: #e74c3c;\n    }\n`;"],"names":["assignRef","ref","value","current","error","Error","mergeRefs","refs","node","forEach","createContext","name","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","styles","useMultiStyleConfig","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","getLabelProps","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","jsx","chakra","__css","displayName","field","helperText","useFormControl","_a","_b","_c","disabled","readOnly","required","rest","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size","schema","object","string","matches","email","LoginForm","useForm","defaultValues","password","resolver","yupResolver","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","onSubmit","data","registerUser","deliveryDataUser","type","message","backgroundColor","to","LabelName","styled","LabelPhone","AddContactButton","ErrorIcon","ErroText","FormFormik"],"sourceRoot":""}
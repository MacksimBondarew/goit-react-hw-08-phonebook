{"version":3,"file":"static/js/8.d24920aa.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","redux/contacts/selectors.js","components/AddContactForm/NameEditorHookForm.jsx","style/NameList.styled.jsx","components/ContactName/ContactName.jsx","components/NameList/NameList.jsx","style/FilterName.styled.jsx","components/FilterName/FilterName.jsx","style/App.styled.jsx","pages/Contacts.jsx","style/NameEditor.styled.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export const selectFilter = state => state.filter.filter;\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;","import { nanoid } from 'nanoid';\nimport { useForm } from 'react-hook-form';\nimport { object, string } from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport {\n    Input,\n    FormFormik,\n    AddContactButton,\n    LabelName,\n    LabelPhone,\n    Error,\n    ErroText,\n    ErrorIcon,\n} from '../../style/NameEditor.styled';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations'\n\nconst schema = object({\n    name: string()\n        .matches(\n            /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n            \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        )\n        .required(),\n    number: string()\n        .matches(\n            /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n            'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +, 5 min numbers'\n        )\n        .required(),\n}).required();\n\nconst NameEditorHookForm = () => {\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            name: '',\n            number: '',\n        },\n        resolver: yupResolver(schema),\n    });\n    const people = useSelector(selectContacts);\n    const dispatch = useDispatch();\n    const addName = (name, number) => {\n        const contact = {\n            id: nanoid(),\n            name,\n            number,\n        };\n        dispatch(addContact(contact));\n    };\n\n    function removeNonDigits(str) {\n        return str.replace(/\\D/g, '');\n    }\n\n    const deliveryData = data => {\n        const { name, number } = data;\n        const nameFound = people.find(\n            person =>\n                person.name.toLowerCase() === name.toLowerCase() ||\n                removeNonDigits(person.number) === removeNonDigits(number)\n        );\n\n        if (nameFound) {\n            alert(`${name} and phone number ${number} is already in contacts`);\n            return;\n        }\n        addName(name, number);\n        reset();\n    };\n\n    return (\n        <FormFormik onSubmit={handleSubmit(deliveryData)}>\n            <LabelName htmlFor=\"name\">Name:</LabelName>\n            <Input\n                type=\"text\"\n                name=\"name\"\n                {...register('name')}\n                aria-invalid={errors.name ? 'true' : 'false'}\n            />\n            {errors.name && (\n                <Error>\n                    <ErrorIcon>⚠️</ErrorIcon>\n                    <ErroText>{errors.name.message}</ErroText>\n                </Error>\n            )}\n            <LabelPhone htmlFor=\"number\">Phone Number:</LabelPhone>\n            <Input\n                type=\"tel\"\n                name=\"number\"\n                {...register('number')}\n                aria-invalid={errors.number ? 'true' : 'false'}\n            />\n            {errors.number && (\n                <Error>\n                    <ErrorIcon>⚠️</ErrorIcon>\n                    <ErroText>{errors.number.message}</ErroText>\n                </Error>\n            )}\n\n            <AddContactButton type=\"submit\">add Contact</AddContactButton>\n        </FormFormik>\n    );\n};\n\nexport default NameEditorHookForm;\n","import styled, { keyframes } from 'styled-components';\n\nexport const ContactsList = styled.ul`\n    list-style: none;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const ContactItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    padding: 10px;\n    background-color: #f9f9f9;\n    border-radius: 5px;\n    margin-bottom: 10px;\n    animation: fadeIn 0.5s ease-in-out;\n    position: relative;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n\n    @keyframes fadeIn {\n        from {\n            opacity: 0;\n            transform: translateY(-10px);\n        }\n        to {\n            opacity: 1;\n            transform: translateY(0);\n        }\n    }\n\n    &.fadeOut {\n        animation: fadeOut 0.5s ease-in-out forwards;\n    }\n\n    @keyframes fadeOut {\n        from {\n            opacity: 1;\n            transform: translateY(0);\n        }\n        to {\n            opacity: 0;\n            transform: translateY(-10px);\n        }\n    }\n`;\n\nexport const ContactNameSpan = styled.span`\n    font-size: 16px;\n    font-weight: bold;\n    color: #333;\n    margin: auto 0;\n`;\n\nexport const ContactNumberSpan = styled.span`\n    font-size: 14px;\n    color: #666;\n    margin: auto 0;\n`;\n\nconst svgAnimation = keyframes`\n    0% {\n    transform: scale(1);\n    }\n    50% {\n    transform: scale(1.2);\n    }\n  100% {\n    transform: scale(1);\n  }\n`;\n\nconst fadeOutAnimation = keyframes`\n    from {\n        opacity: 1;\n        transform: translateY(0);\n    }\n    to {\n        opacity: 0;\n        transform: translateY(-10px);\n    }\n`;\nexport const RemoveContact = styled.button`\n    padding: 8px 12px;\n    background-color: #f44336;\n    color: #fff;\n    border: none;\n    border-radius: 3px;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n\n    &:hover {\n        background-color: #d32f2f;\n        svg {\n            animation: ${svgAnimation} 1s ease-in-out infinite;\n        }\n    }\n\n    &:active {\n        background-color: #b71c1c;\n        svg {\n            fill: #f44336;\n        }\n        + ${ContactItem} {\n            animation: ${fadeOutAnimation} 0.5s ease-in-out forwards;\n        }\n    }\n\n    &:focus {\n        outline: none;\n        box-shadow: 0 0 0 3px rgba(244, 67, 54, 0.4);\n    }\n\n    svg {\n        width: 20px;\n        height: 20px;\n        fill: #fff;\n        margin-right: 5px;\n        transition: all 0.2s ease-in-out;\n    }\n`;\nexport const Error = styled.h1`\n    font-size: 24px;\n    font-weight: bold;\n    text-align: center;\n    color: #ff4d4f;\n    margin-top: 20px;\n`;\n","import { deleteContact } from 'redux/contacts/operations';\nimport {\n    ContactNameSpan,\n    ContactNumberSpan,\n    RemoveContact,\n} from '../../style/NameList.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nconst ContactName = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    const deleteName = nameId => {\n        dispatch(deleteContact(nameId));\n    };\n    return (\n        <>\n            <ContactNameSpan>{name}</ContactNameSpan>\n            <ContactNumberSpan>{number}</ContactNumberSpan>\n            <RemoveContact type=\"button\" onClick={() => deleteName(id)}>\n                Видалити\n            </RemoveContact>\n        </>\n    );\n};\nContactName.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n\nexport default ContactName;\n","import { ContactsList, ContactItem, Error } from '../../style/NameList.styled';\nimport ContactName from '../ContactName/ContactName';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    selectContacts,\n    selectFilter,\n    selectLoading,\n    selectError,\n} from '../../redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { featchContacts } from '../../redux/contacts/operations';\nimport { DotLoader } from 'react-spinners';\n\nconst NameList = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(featchContacts());\n    }, [dispatch]);\n    const filter = useSelector(selectFilter);\n    const contacts = useSelector(selectContacts);\n    const error = useSelector(selectError);\n    const loading = useSelector(selectLoading);\n\n    const getVisibleName = () => {\n        const normalizedName = filter.toLowerCase();\n        const filterContacts = contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedName)\n        );\n        return [...filterContacts].sort((a, b) =>\n            a.name.toLowerCase().localeCompare(b.name)\n        );\n    };\n    return (\n        <>\n            {loading && (\n                <>\n                    <DotLoader\n                        style={{\n                            position: 'fixed',\n                            top: '50%',\n                            left: '50%',\n                            zIndex: '999',\n                        }}\n                        color=\"#3682d6\"\n                        cssOverride={{}}\n                        loading\n                        size={50}\n                    />\n                </>\n            )}\n            {error ? (\n                <>\n                    <Error>\n                        Sorry, an error occurred while loading this page. Please\n                        try again later\n                    </Error>\n                </>\n            ) : (\n                <>\n                    <ContactsList>\n                        {getVisibleName().map(({ id, name, number }) => (\n                            <ContactItem key={id}>\n                                <ContactName\n                                    id={id}\n                                    name={name}\n                                    number={number}\n                                />\n                            </ContactItem>\n                        ))}\n                    </ContactsList>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default NameList;\n","import styled, { keyframes } from 'styled-components';\n\nconst fadeInAnimation = keyframes`\n    from {\n        opacity: 0;\n        transform: translateY(-10px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n`;\n\nconst svgAnimation = keyframes`\n    0% {\n        transform: scale(1);\n    }\n    50% {\n        transform: scale(1.2);\n    }\n    100% {\n        transform: scale(1);\n    }\n`;\n\nexport const FilterContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 20px auto;\n    margin-top: 0px;\n`;\n\nexport const FilterNameLabel = styled.label`\n    display: flex;\n    align-items: center;\n    position: relative;\n`;\n\nexport const FilterNameSpan = styled.span`\n    font-size: 16px;\n    font-weight: bold;\n    margin-right: 10px;\n    color: #555;\n    animation: ${fadeInAnimation} 0.5s ease-in-out;\n`;\n\nexport const FilterImput = styled.input`\n    padding: 10px;\n    border-radius: 20px;\n    font-size: 16px;\n    border: none;\n    border-bottom: 2px solid #eee;\n    outline: none;\n    flex-grow: 1;\n    background-color: #fff;\n    transition: all 0.2s ease-in-out;\n\n    &:focus {\n        border-bottom: 2px solid #3f51b5;\n    }\n\n    &::placeholder {\n        color: #bbb;\n    }\n`;\n\nexport const FilterImputIcon = styled.svg`\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translateY(-50%);\n    width: 20px;\n    height: 20px;\n    fill: #bbb;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n\n    &:hover {\n        animation: ${svgAnimation} 1s ease-in-out infinite;\n        fill: #3f51b5;\n    }\n\n    &:active {\n        fill: #3f51b5;\n    }\n`;\n","import {\n    FilterContainer,\n    FilterNameLabel,\n    FilterImput,\n    FilterNameSpan,\n    FilterImputIcon,\n} from '../../style/FilterName.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilterContact } from '../../redux/contacts/filter';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nconst FilterName = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    const changeFilter = e => {\n        dispatch(changeFilterContact(e.target.value));\n    };\n    return (\n        <FilterContainer>\n            <FilterNameLabel>\n                <FilterNameSpan>Filter Name</FilterNameSpan>\n                <FilterImput\n                    type=\"text\"\n                    value={filter}\n                    onChange={changeFilter}\n                />\n                <FilterImputIcon viewBox=\"0 0 24 24\">\n                    <path d=\"M21.71,20.29l-5.05-5a8,8,0,1,0-1.41,1.41l5,5a1,1,0,0,0,1.41-1.41Zm-13.12-6.44a6,6,0,1,1,6-6A6,6,0,0,1,8.59,13.85Z\"></path>\n                </FilterImputIcon>\n            </FilterNameLabel>\n        </FilterContainer>\n    );\n};\n\nexport default FilterName;\n","import styled from 'styled-components';\n\nexport const PhoneBook = styled.div`\n    padding-top: 20px;\n    padding-bottom: 20px;\n`;\n\nexport const MainTitlePhoneBook = styled.h1`\n    text-align: center;\n    font-family: 'Delicious Handrawn', cursive;\n    font-size: 40px;\n    letter-spacing: 0px;\n    word-spacing: 0px;\n    color: yellow;\n    font-weight: normal;\n    text-decoration: none;\n    font-style: normal;\n    font-variant: normal;\n    text-transform: none;\n    margin-bottom: 20px;\n`;\n\nexport const TitleContacts = styled.h2`\n    text-align: center;\n    color: yellow;\n    font-family: \"Delicious Handrawn\", cursive;\n    font-size: 35px;\n    letter-spacing: 0px;\n    word-spacing: 0px;\n    font-weight: normal;\n    text-decoration: none;\n    font-style: normal;\n    font-variant: normal;\n    text-transform: none;\n    margin-bottom: 20px;\n`;\n","import React from 'react';\nimport NameEditor from '../components/AddContactForm';\nimport NameList from '../components/NameList';\nimport FilterName from '../components/FilterName';\nimport { PhoneBook, TitleContacts, MainTitlePhoneBook } from '../style/App.styled';\n\nexport default function Contacts() {\n    return (\n        <PhoneBook>\n            <MainTitlePhoneBook>Phonebook</MainTitlePhoneBook>\n            <NameEditor />\n\n            <TitleContacts>Contacts</TitleContacts>\n            <FilterName />\n            <NameList />\n        </PhoneBook>\n    );\n}\n","import styled from 'styled-components';\n\n\nexport const ContactForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    max-width: 400px;\n    margin: 0 auto;\n    margin-bottom: 20px;\n`;\n\n\nexport const LabelName = styled.label`\n    margin-bottom: 0.5rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: #333;\n    text-align: center;\n`;\n\nexport const LabelPhone = styled.label`\n    margin-bottom: 0.5rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: #333;\n    text-align: center;\n`;\n\nexport const NameInput = styled.input`\n    padding: 0.5rem;\n    margin-bottom: 1rem;\n    font-size: 1.2rem;\n    border: 2px solid #ccc;\n    border-radius: 5px;\n\n    &:focus {\n        outline: none;\n        border-color: #0088cc;\n    }\n\n    &:invalid {\n        border-color: #e74c3c;\n    }\n`;\n\nexport const NumberInput = styled.input`\n    padding: 0.5rem;\n    margin-bottom: 1rem;\n    font-size: 1.2rem;\n    border: 2px solid #ccc;\n    border-radius: 5px;\n\n    &:focus {\n        outline: none;\n        border-color: #0088cc;\n    }\n\n    &:invalid {\n        border-color: #e74c3c;\n    }\n`;\n\nexport const AddContactButton = styled.button`\n    padding: 0.5rem 1rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    text-transform: uppercase;\n    color: #fff;\n    background-color: #0088cc;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    &:hover {\n        background-color: #006699;\n    }\n`;\nexport const Error = styled.div`\n    background-color: #ff6b6b;\n    color: #fff;\n    padding: 10px;\n    border-radius: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    margin-bottom: 10px;\n`;\n\nexport const ErrorIcon = styled.span`\n    font-size: 20px;\n    margin-right: 10px;\n`;\n\nexport const ErroText = styled.span`\n    font-size: 16px;\n`;\nexport const FormFormik = styled.form`\n    display: flex;\n    flex-direction: column;\n    max-width: 400px;\n    margin: 0 auto;\n    margin-bottom: 20px;\n`;\n\n\n\nexport const Input = styled.input`\n    padding: 0.5rem;\n    margin-bottom: 1rem;\n    font-size: 1.2rem;\n    border: 2px solid #ccc;\n    border-radius: 5px;\n\n    &:focus {\n        outline: none;\n        border-color: #0088cc;\n    }\n\n    &:invalid {\n        border-color: #e74c3c;\n    }\n`;"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","selectFilter","state","filter","selectContacts","contacts","items","selectLoading","isLoading","selectError","error","schema","object","name","string","matches","required","number","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","reset","errors","formState","people","useSelector","dispatch","useDispatch","removeNonDigits","str","replace","onSubmit","data","find","person","toLowerCase","alert","contact","addContact","addName","htmlFor","type","message","ContactsList","styled","ContactItem","ContactNameSpan","ContactNumberSpan","svgAnimation","keyframes","fadeOutAnimation","RemoveContact","Error","onClick","nameId","deleteContact","useEffect","featchContacts","loading","DotLoader","style","position","top","left","zIndex","color","cssOverride","normalizedName","filterContacts","includes","sort","a","b","localeCompare","getVisibleName","map","fadeInAnimation","FilterContainer","FilterNameLabel","FilterNameSpan","FilterImput","FilterImputIcon","value","onChange","e","changeFilterContact","target","viewBox","d","PhoneBook","MainTitlePhoneBook","TitleContacts","Contacts","LabelName","LabelPhone","AddContactButton","ErrorIcon","ErroText","FormFormik","Input"],"sourceRoot":""}